strategy:
  matrix:
    windows:
      imageName: 'vs2017-win2016'
#    linux:
#      imageName: 'ubuntu-16.04'
#    mac:
#      imageName: 'macos-10.13'
#    windows:
#      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
- bash: |
    curl https://win.rustup.rs/x86_64 > rustup-init.exe
    ./rustup-init.exe -y
    echo "##vso[task.prependpath]$USERPROFILE\.cargo\bin"
  displayName: Install Rust

- bash: |
    # Explicitly install all targets
    rustup target add i686-pc-windows-msvc
    rustup target add x86_64-pc-windows-msvc
    rustup target add i686-pc-windows-gnu
    rustup target add x86_64-pc-windows-gnu
  displayName: Add Rust Targets

- bash: |
    cargo build -p cmake-cargo-gen
  displayName: Build cmake-cargo-gen
    
- task: CMake@1
  inputs:
    cmakeArgs: -G "Visual Studio 15 2017 Win64" ..
  displayName: Generate CMake Build Folder
        
- task: CMake@1
  inputs:
    cmakeArgs: --build . --target cargo_cmake-cargo-gen
  displayName: Build cmake-cargo-gen for target platform
        
- task: CMake@1
  inputs:
    cmakeArgs: --build . --target rust-lib-cpp-exe
  displayName: Build library linking test